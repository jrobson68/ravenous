{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","Object","keys","sortByOption","sortByOptionValue","key","renderSortByOptions","placeholder","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yTA6BeA,sMAvBb,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,KAAKC,MAAMC,SAASC,SAAUC,IAAI,MAE7CT,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASG,MACzBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASI,SACxBX,EAAAC,EAAAC,cAAA,SAAIG,KAAKC,MAAMC,SAASK,MACxBZ,EAAAC,EAAAC,cAAA,cAAMG,KAAKC,MAAMC,SAASM,MAA1B,KAAmCR,KAAKC,MAAMC,SAASO,QAAvD,MAEDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,UAAKG,KAAKC,MAAMC,SAASQ,UACzBf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,KAA0BE,KAAKC,MAAMC,SAASS,OAA9C,WACAhB,EAAAC,EAAAC,cAAA,cAAMG,KAAKC,MAAMC,SAASU,YAA1B,eAjBiBC,IAAMC,YCgBdC,mLAZb,OACCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbE,KAAKC,MAAMe,WAAWC,IAAI,SAAAf,GACzB,OAAOP,EAAAC,EAAAC,cAACqB,EAAD,CAAUhB,SAAUA,cANNW,IAAMC,WCH3BK,SAAgB,CACrBC,aAAc,aACdC,gBAAiB,SACjBC,gBAAiB,iBA+BHC,gMA1Bb,OAAOC,OAAOC,KAAKN,GAAeF,IAAI,SAAAS,GACrC,IAAIC,EAAoBR,EAAcO,GACtC,OAAO/B,EAAAC,EAAAC,cAAA,MAAI+B,IAAKD,GAAoBD,sCAKrC,OACC/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACdH,EAAAC,EAAAC,cAAA,UACEG,KAAK6B,wBAGTlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,SAAOiC,YAAY,sBACnBnC,EAAAC,EAAAC,cAAA,SAAOiC,YAAY,YAEpBnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,8BArBoBgB,IAAMC,WCExBZ,EAAW,CACfC,SAAU,gFACVE,KAAM,sBACNC,QAAS,sBACTC,KAAM,aACNC,MAAO,KACPC,QAAS,QACTC,SAAU,UACVC,OAAQ,IACRC,YAAa,IAGTI,EAAa,CAACd,EAAUA,EAAUA,EAAUA,EAAUA,EAAUA,GAcvD6B,mLAVX,OACFpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,CAAcjB,WAAYA,YANXH,IAAMC,WCbJoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ff411f45.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\n\r\nclass Business extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"Business\">\r\n\t\t\t\t<div className=\"image-container\">\r\n\t\t\t\t\t<img src={this.props.business.imageSrc} alt=''/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>{this.props.business.name}</h2>\r\n\t\t\t\t<div className=\"Business-information\">\r\n\t\t\t\t\t<div className=\"Business-address\">\r\n\t\t\t\t\t\t<p>{this.props.business.address}</p>\r\n\t\t\t\t\t\t<p>{this.props.business.city}</p>\r\n\t\t\t\t\t\t<p>`${this.props.business.state} ${this.props.business.zipCode}`</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"Business-reviews\">\r\n\t\t\t\t\t\t<h3>{this.props.business.category}</h3>\r\n\t\t\t\t\t\t<h3 className=\"rating\">`${this.props.business.rating} stars`</h3>\r\n\t\t\t\t\t\t<p>`${this.props.business.reviewCount}`</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\n\r\nimport Business from '../Business/Business';\r\n\r\n\r\nclass BusinessList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"BusinessList\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.businesses.map(business => {\r\n\t\t\t\t\t\treturn <Business business={business} />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n\t'Best Match': 'best_match',\r\n\t'Highest Rated': 'rating',\r\n\t'Most Reviewed': 'review_count'\r\n};\r\n\r\nclass SearchBar extends React.Component {\r\n\trenderSortByOptions() {\r\n\t\treturn Object.keys(sortByOptions).map(sortByOption => {\r\n\t\t\tlet sortByOptionValue = sortByOptions[sortByOption];\r\n\t\t\treturn <li key={sortByOptionValue}>{sortByOption}</li>\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"SearchBar\">\r\n\t\t\t\t<div className=\"SearchBar-sort-options\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.renderSortByOptions()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t<div className=\"SearchBar-fields\">\r\n\t\t\t\t<input placeholder=\"Search Businesses\" />\r\n\t\t\t\t<input placeholder=\"Where?\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"SearchBar-submit\">\r\n\t\t\t\t<a>Let's Go</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","\n\nimport React from 'react';\nimport './App.css';\n\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\n\n\n\n\nconst business = {\n  imageSrc: 'https://s3.amazonaws.com/codecademy-content/programs/react/ravenous/pizza.jpg',\n  name: 'MarginOtto Pizzeria',\n  address: '1010 Paddington Way',\n  city: 'Flavortown',\n  state: 'NY',\n  zipCode: '10101',\n  category: 'Italian',\n  rating: 4.5,\n  reviewCount: 90\n};\n\nconst businesses = [business, business, business, business, business, business];\n\nclass App extends React.Component {\n  render() {\n    return (\n\t\t<div className=\"App\">\n\t\t\t<h1>ravenous</h1>\n\t\t\t<SearchBar />\n\t\t\t<BusinessList businesses={businesses}/> \n\t\t</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}