{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","components/Yelp/Yelp.js","App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","sortByOptions","Best Match","Highest Rated","Most Reviewed","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","_this2","keys","sortByOptionValue","onClick","handleSortByChange","getSortByClass","renderSortByOptions","onChange","placeholder","Yelp","search","fetch","concat","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55b0375b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"Business\">\r\n\t\t\t\t<div className=\"image-container\">\r\n\t\t\t\t\t<img src={this.props.business.imageSrc} alt=''/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<h2>{this.props.business.name}</h2>\r\n\t\t\t\t<div className=\"Business-information\">\r\n\t\t\t\t\t<div className=\"Business-address\">\r\n\t\t\t\t\t\t<p>{this.props.business.address}</p>\r\n\t\t\t\t\t\t<p>{this.props.business.city}</p>\r\n\t\t\t\t\t\t<p>{this.props.business.state} {this.props.business.zipCode}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"Business-reviews\">\r\n\t\t\t\t\t\t<h3>{this.props.business.category}</h3>\r\n\t\t\t\t\t\t<h3 className=\"rating\">{this.props.business.rating} stars</h3>\r\n\t\t\t\t\t\t<p>{this.props.business.reviewCount} reviews</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Business;\r\n","\r\nimport React from 'react';\r\nimport Business from '../Business/Business';\r\nimport './BusinessList.css';\r\n\r\n\r\n\r\n\r\nclass BusinessList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"BusinessList\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.props.businesses.map(business => {\r\n\t\t\t\t\t\treturn <Business key={business.id} business={business}  />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n\t'Best Match': 'best_match',\r\n\t'Highest Rated': 'rating',\r\n\t'Most Reviewed': 'review_count'\r\n};\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tterm: '',\r\n\t\t\tlocation: '',\r\n\t\t\tsortBy: 'best_match'\r\n\t\t};\r\n\r\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\r\n\t\tthis.handleLocationChange = this.handleLocationChange.bind(this);\r\n\t\tthis.handleSearch = this.handleSearch.bind(this);\r\n\t}\r\n\t\r\n\tgetSortByClass(sortByOption) {\r\n\t\tif(sortByOption === this.state.sortBy) {\r\n\t\t\treturn 'active';\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\t\r\n\thandleSortByChange(sortByOption) {\r\n\t\tthis.setState({\r\n\t\t\tsortBy: sortByOption \r\n\t\t});\r\n\t}\r\n\r\n\thandleTermChange(event) {\r\n\t\tthis.setState({\r\n\t\t\tterm: event.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandleLocationChange(event) {\r\n\t\tthis.setState({\r\n\t\t\tlocation: event.target.value\r\n\t\t});\r\n\t}\r\n\t\r\n\thandleSearch(event) {\r\n\t\tthis.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\r\n\t\tevent.preventDefault()\r\n\t}\r\n\r\n\trenderSortByOptions() {\r\n\t\treturn Object.keys(sortByOptions).map(sortByOption => {\r\n\t\t\tlet sortByOptionValue = sortByOptions[sortByOption];\r\n\t\t\treturn <li onClick={this.handleSortByChange.bind(this, sortByOptionValue)} className={this.getSortByClass(sortByOptionValue)} key={sortByOptionValue}>{sortByOption}</li>\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"SearchBar\">\r\n\t\t\t\t<div className=\"SearchBar-sort-options\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{this.renderSortByOptions()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t<div className=\"SearchBar-fields\">\r\n\t\t\t\t<input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\r\n\t\t\t\t<input onChange={this.handleLocationChange} placeholder=\"Where?\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"SearchBar-submit\">\r\n\t\t\t\t<a onClick={this.handleSearch}>Let's Go</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SearchBar;","const apiKey = 'nn2p3sYFKvmdvWsO_sv3vn1LTAeoUndcwdchFGRuN2q-Z8Dw6ns9jj6gJYGZWR_UwQ3HcS0gKgu5TgFTr8yswfYpQ6i6zwAhj0cUvNFfSdypLS743IMpIhZIENrlW3Yx';\r\n\r\nconst Yelp = {search(term, location, sortBy) {\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \r\n    {headers: { Authorization: `Bearer ${apiKey}`}})\r\n    .then(response => {\r\n        return response.json().then(jsonResponse => {\r\n            if(jsonResponse.businesses) {               \r\n                return jsonResponse.businesses.map(business => {\r\n                    return {\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city: business.location.city,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories.title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                        }\r\n                    })\r\n                \r\n                }\r\n            })\r\n        })\r\n    }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\nimport './App.css';\nimport BusinessList from './components/BusinessList/BusinessList';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Yelp from './components/Yelp/Yelp';\n\nclass App extends React.Component {\n\n  constructor (props) {\n    super (props);\n    this.state = {\n      businesses: []\n    }\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => {\n      this.setState(\n          {\n            businesses: businesses\n        }\n      )\n    });\n  }\n\n  render() {\n    return (\n\t\t<div className=\"App\">\n\t\t\t<h1>ravenous</h1>\n\t\t\t<SearchBar searchYelp={this.searchYelp} />\n\t\t\t<BusinessList businesses={this.state.businesses} /> \n\t\t</div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}